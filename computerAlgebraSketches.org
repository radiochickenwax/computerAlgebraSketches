

** computer algebra sketches

*** journal

*** overview

This is a large topic to cover.  There are lots of choices to make.
There are lots of examples to pull from.  

**** prior examples to pull from

	 - emacs calc
	   - PRO: most useful because of its integration with emacs
	   - PRO: has units
	   - CON: is not really a standalone package.  Where is source
             code?  Emacs is beautiful but too complicated.  
	 - maxima
	   - http://maxima.sourceforge.net/
	   - http://sourceforge.net/projects/maxima/files/Maxima-source/
	   - PRO: more powerful algebra than emacs calc
	   - NON: also written in lisp
	   - CON: huge code base
	 - yacas
	   - http://yacas.sourceforge.net/homepage.html
	   - written in C++
	 - sympy
	   - PRO: standalone and pluggable
	   - http://www.sympy.org/en/index.html
	 - numpy
	   - PRO standalone and pluggable
	   - http://www.numpy.org/
	 - ginac
	   - http://www.ginac.de/
	   - PRO: written in C?
	   - PRO: standalone and pluggable
	   - not much interactivity
	 - see rpn calc in mlib

**** language choice	 

     - javascript
     - python
     - c
     - C++
     - python
	   

*** goals
**** getting started

https://en.wikipedia.org/wiki/Computer_algebra_system

**** find common algorithms
**** graphing / plotting
     SVG and OpenGL would be nice.  What about native support?  Web
     support?  What are pros and cons?
**** user support?
     Multiusers?
**** note book style functionality?
     Store in files?  Database?  Which one?
